{"version":3,"file":"static/webpack/static/development/pages/_error.js.99b6130ad233a65105a4.hot-update.js","sources":["webpack:///./components/View/index.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { State, Dispatch } from \"~/pages\";\nimport Logo from \"~/components/Logo\";\nimport Menu from \"~/components/Menu\";\nimport PageView from \"./PageView\";\n\nimport $, { css } from \"./style.css\";\n\nexport default ({ data }) => {\n\tconst dispatch = useContext(Dispatch);\n\tconst state = useContext(State);\n\n\tconst { isMenuOpened, view, nav, constants, colors } = state;\n\n\tconst currentViewData =\n\t\tview == \"home\"\n\t\t\t? { ...data.home, categories: data.categories }\n\t\t\t: Object.keys(data.categories).indexOf(view) > -1\n\t\t\t? data.categories[view]\n\t\t\t: { ...data[view] } || {\n\t\t\t\t\t...data.home,\n\t\t\t\t\tcategories: data.categories,\n\t\t\t  };\n\n\tconst currentView =\n\t\tview == \"home\"\n\t\t\t? view\n\t\t\t: Object.keys(data.categories).indexOf(view) > -1\n\t\t\t? view\n\t\t\t: data[view]\n\t\t\t? view\n\t\t\t: \"home\";\n\n\tconst styleIn = {\n\t\topacity: 0.5,\n\t\ttransform: \"translateX(-100%)\",\n\t\toverflow: \"hidden\",\n\t\theight: \"100%\",\n\t};\n\n\tconst styleOut = {\n\t\topacity: 1,\n\t\ttransform: \"translateX(0%)\",\n\t};\n\tconst menuClasses = `${$.menu} ion-navicon ${\n\t\tisMenuOpened ? $.is_opened : \"\"\n\t}`;\n\n\tconst menuColors = {\n\t\tprimary: colors.palette[colors.menu.primary],\n\t\taccent: colors.palette[colors.menu.accent],\n\t};\n\n\treturn !data ? null : (\n\t\t<b className={$.container}>\n\t\t\t<b className={$.content} style={isMenuOpened ? styleIn : styleOut}>\n\t\t\t\t<Logo\n\t\t\t\t\timage={data.logo}\n\t\t\t\t\tonSelect={view =>\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: \"selectView\",\n\t\t\t\t\t\t\tview: view,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<PageView\n\t\t\t\t\tdata={currentViewData}\n\t\t\t\t\tview={currentView}\n\t\t\t\t\tconstants={constants}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t/>\n\t\t\t</b>\n\t\t\t<b\n\t\t\t\tclassName={menuClasses}\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor: isMenuOpened\n\t\t\t\t\t\t? menuColors.primary\n\t\t\t\t\t\t: menuColors.accent,\n\t\t\t\t}}\n\t\t\t\tonClick={() => dispatch({ type: \"toggleMenu\" })}\n\t\t\t/>\n\t\t\t<Menu\n\t\t\t\tisOpen={isMenuOpened}\n\t\t\t\titems={nav}\n\t\t\t\tcolors={menuColors}\n\t\t\t\tselectedView={view}\n\t\t\t\tonSelect={view =>\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"selectView\",\n\t\t\t\t\t\tview: view,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t/>\n\t\t</b>\n\t);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AADA;AAMA;AAFA;AAKA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AAIA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;A","sourceRoot":""}