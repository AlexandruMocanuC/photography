{"version":3,"file":"static/webpack/static/development/pages/_error.js.c4ef97da72e7074a3789.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport Router, { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport reducer from \"~/reducer.js\";\nimport { BASE } from \"~/playground.js\";\n\nimport MobileApp from \"~/views/home/MobileApp\";\nimport App from \"~/views/home/App\";\n\nimport $ from \"./style.css\";\n\nfunction getRandomInt(max) {\n\treturn Math.floor(Math.random() * Math.floor(max));\n}\n\nexport const State = React.createContext(null);\nexport const Dispatch = React.createContext(null);\n\nexport default function Application() {\n\tconst [data, setData] = useState(null);\n\n\tuseEffect(() => {\n\t\tfetch(`${BASE}/data.json`, {})\n\t\t\t.then(reply => {\n\t\t\t\treply.json().then(selected => {\n\t\t\t\t\tsetData(selected);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(reply => {\n\t\t\t\tconsole.log(\"HTTP Error\", reply);\n\t\t\t});\n\t}, [useRouter().asPath]);\n\n\treturn !data ? null : (\n\t\t<b className={$.application}>\n\t\t\t<Head>\n\t\t\t\t<link\n\t\t\t\t\thref=\"https://fonts.googleapis.com/css?family=Montserrat:300,500,700|Lato:400\"\n\t\t\t\t\trel=\"stylesheet\"\n\t\t\t\t/>\n\t\t\t\t<link\n\t\t\t\t\trel=\"stylesheet\"\n\t\t\t\t\thref=\"https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\"\n\t\t\t\t/>\n\t\t\t</Head>\n\t\t\t<Home data={data} />\n\t\t</b>\n\t);\n}\n\nconst Home = ({ data = {} }) => {\n\tconsole.log(useRouter());\n\tconst initialState = {\n\t\tlogo: data.logo,\n\t\tnav: data.menu,\n\t\tview:\n\t\t\tuseRouter().asPath.slice(\n\t\t\t\tuseRouter().asPath.indexOf(BASE) + BASE.length + 1\n\t\t\t) || \"home\",\n\t\tisMenuOpened: false,\n\t\tconstants: data.constants,\n\t\tcolors:\n\t\t\tdata.constants.colors[getRandomInt(data.constants.colors.length)],\n\t};\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\n\t// useEffect(() => {\n\t// \tconst handleRouteChange = url => {\n\t// \t\tdispatch({\n\t// \t\t\ttype: \"selectView\",\n\t// \t\t\tview: url.slice(url.indexOf(BASE) + BASE.length + 1) || \"home\",\n\t// \t\t});\n\t// \t};\n\n\t// \tRouter.events.on(\"routeChangeStart\", handleRouteChange);\n\t// \treturn () => {\n\t// \t\tRouter.events.off(\"routeChangeStart\", handleRouteChange);\n\t// \t};\n\t// }, []);\n\n\treturn (\n\t\t<Dispatch.Provider value={dispatch}>\n\t\t\t<State.Provider value={state}>\n\t\t\t\t{isMobile ? (\n\t\t\t\t\t<MobileApp\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tisMenuOpened={state.isMenuOpened}\n\t\t\t\t\t\tcolors={state.colors}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<App\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tisMenuOpened={state.isMenuOpened}\n\t\t\t\t\t\tcolors={state.colors}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</State.Provider>\n\t\t</Dispatch.Provider>\n\t);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AATA;AACA;AAHA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;A","sourceRoot":""}